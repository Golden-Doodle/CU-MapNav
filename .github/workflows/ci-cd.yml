name: CI Pipeline

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: expo-app/package-lock.json
          
      - name: Install Expo CLI
        run: npm install expo-cli
        working-directory: expo-app
        
      - name: Install Dependencies
        run: npm install
        working-directory: expo-app

      - name: Install Google Sign-In
        run: npm install @react-native-google-signin/google-signin
        working-directory: expo-app

  jest-tests:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
  
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: expo-app/package-lock.json

      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: node-cache-${{ runner.os }}-${{ hashFiles('expo-app/package-lock.json') }}
          restore-keys: |
            node-cache-${{ runner.os }}-
  
      - name: Install Dependencies
        run: |
          npm install
          npm install --save-dev jest-expo
        working-directory: expo-app
  
      - name: Run Jest Tests with Coverage
        run: |
          npx jest --coverage --ci --passWithNoTests || true
        working-directory: expo-app
  
      - name: Upload Coverage Report to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: expo-app/coverage/lcov.info
          fail_ci_if_error: true
          verbose: true

 
  sonarqube:
    needs: [jest-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v4
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"
        with:
          args: >
            -Dsonar.organization=your-org
            -Dsonar.projectKey=your-project
            -Dsonar.sources=expo-app/app
            -Dsonar.test.inclusions=expo-app/__tests__/**/*.test.{js,ts,tsx}
            -Dsonar.exclusions=expo-app/node_modules/**,expo-app/coverage/**,expo-app/__tests__/**
            -Dsonar.javascript.lcov.reportPaths=expo-app/coverage/lcov.info
            -Dsonar.tests=expo-app/**/__tests__

  deploy:
    needs: [sonarqube]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy Application
        run: |
          echo "Deploying application..."
          # Add deployment steps here
